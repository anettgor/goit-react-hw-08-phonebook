{"version":3,"file":"static/js/948.2dc22b22.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getStatusFilter = state => state.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { List, IconButton, ListItem } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { deleteContact } from './../../redux/phonebook/operations';\nimport {\n  getStatusFilter,\n  getContacts,\n} from './../../redux/phonebook/selectors';\n\nexport const ContactList = () => {\n  const filter = useSelector(getStatusFilter);\n  const filteredContacts = useSelector(getContacts).filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n  const dispatch = useDispatch();\n\n  return (\n    <List sx={{ margin: '0 auto', width: '80vw' }}>\n      {filteredContacts.map(contact => {\n        return (\n          <ListItem\n            key={contact.id}\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              transition: 'borderBottom 500ms',\n\n              '&:hover': {\n                borderBottom: ' 1px solid #e5e5e5',\n              },\n            }}\n          >\n            <div>\n              <p>\n                <b>{contact.name}</b>: {contact.number}\n              </p>\n            </div>\n            <IconButton\n              onClick={() => dispatch(deleteContact(contact.id))}\n              aria-label=\"delete\"\n              type=\"button\"\n              variant=\"contained\"\n              color=\"error\"\n              size=\"small\"\n              id={contact.id}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import { Box, Button } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nimport { getContacts } from './../../redux/phonebook/selectors';\nimport { addContact } from './../../redux/phonebook/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const newContact = {\n      name,\n      number,\n    };\n    if (name.trim() === '' || number.trim() === '') {\n      Notify.info('Please do not leave the contact field empty');\n    } else if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notify.info(`Contact ${name} is already in your contact list`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      Notify.info(\n        `Contact ${number} is already in your contact list under a different name`\n      );\n    } else {\n      Notify.success(`Contact ${name} successfully added`);\n      dispatch(addContact(newContact));\n      form.reset();\n      console.log(newContact);\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'flex',\n        gap: '25px',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        mt: '10%',\n        color: '#fff',\n      }}\n    >\n      <h1>Add new contact</h1>\n      <TextField\n        sx={{ width: '80vw', maxWidth: 500 }}\n        id=\"outlined-controlled\"\n        label=\"Name\"\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"name\"\n      />\n      <TextField\n        sx={{ width: '80vw', maxWidth: 500 }}\n        id=\"outlined-controlled\"\n        label=\"Number\"\n        variant=\"outlined\"\n        type=\"tel\"\n        name=\"number\"\n      />\n      <Button\n        sx={{\n          height: 45,\n          width: 200,\n          mt: '20px',\n          color: '#fff',\n          backgroundColor: '#209eec',\n          borderRadius: '25px',\n\n          '&:hover:not(.active)': {\n            color: '#fff',\n            backgroundColor: '#027ecc',\n          },\n        }}\n        type=\"submit\"\n        variant=\"contained\"\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { Box } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nimport { setStatusFilter } from './../../redux/phonebook/filterSlice';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setStatusFilter(e.target.value));\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        gap: '25px',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        mt: '5%',\n        color: '#fff',\n      }}\n    >\n      <div>\n        <h1>Your contacts</h1>\n        <h3>Find contacts by name </h3>\n      </div>\n      <TextField\n        sx={{ width: '80vw', maxWidth: 500 }}\n        id=\"outlined-controlled\"\n        label=\"Enter contact's name\"\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"find contact\"\n        onInput={handleChange}\n      />\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { ContactList } from './../components/ContactList/ContactList';\nimport { ContactForm } from './../components/ContactForm/ContactForm';\nimport { Filter } from './../components/Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from './../redux/phonebook/selectors';\nimport { fetchContacts } from './../redux/phonebook/operations';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n\n      {contacts.length > 1 && <Filter />}\n      {contacts.length > 0 && <ContactList />}\n      {contacts.length === 0 && (\n        <p\n          style={{\n            display: 'flex',\n            gap: '25px',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: '10%',\n            color: '#01090f',\n          }}\n        >\n          Your contact list is empty\n        </p>\n      )}\n    </div>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getStatusFilter","filter","ContactList","useSelector","filteredContacts","contact","name","toLowerCase","includes","dispatch","useDispatch","List","sx","margin","width","map","ListItem","display","justifyContent","transition","borderBottom","number","IconButton","onClick","deleteContact","id","type","variant","color","size","Delete","ContactForm","Box","component","autoComplete","onSubmit","e","preventDefault","form","currentTarget","elements","value","newContact","trim","Notify","find","addContact","reset","console","log","gap","flexDirection","alignItems","mt","TextField","maxWidth","label","Button","height","backgroundColor","borderRadius","Filter","onInput","setStatusFilter","target","ContactsPage","useEffect","fetchContacts","length","style","marginTop"],"sourceRoot":""}